PickUP_Delivery Service er jonno model dessign need...:
    moto or car option tahkbe select er jonno......then.. 
    
    pickup_location dite hobe..
    pickup_address_line_2 
    name 
    phone_number 
    what do you need to pickup?

    delivery_location 
    delivery_address_line_2 
    name 
    phone_number 
    what do you need to deliver at this location?
             
             + add another deliver 

    select payment_method


    -----------------
    from django.db import models
from django.contrib.auth import get_user_model

User = get_user_model()

# Choices
VEHICLE_CHOICES = (
    ('moto', 'Moto'),
    ('car', 'Car'),
)

PAYMENT_METHODS = (
    ('cash', 'Cash'),
    ('online', 'Online'),
    ('card', 'Card'),
)

class PickupDeliveryService(models.Model):
    user = models.ForeignKey(User, on_delete=models.CASCADE, related_name='pickup_deliveries')
    vehicle_type = models.CharField(max_length=10, choices=VEHICLE_CHOICES)

    # Pickup Information
    pickup_location = models.CharField(max_length=255)
    pickup_address_line_2 = models.CharField(max_length=255, blank=True, null=True)
    pickup_name = models.CharField(max_length=100)
    pickup_phone_number = models.CharField(max_length=20)
    pickup_description = models.TextField(help_text="What do you need to pickup?")

    payment_method = models.CharField(max_length=20, choices=PAYMENT_METHODS)

    created_at = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return f"{self.user} - {self.vehicle_type} - {self.created_at.strftime('%Y-%m-%d')}"

class DeliveryStop(models.Model):
    service = models.ForeignKey(PickupDeliveryService, on_delete=models.CASCADE, related_name='delivery_stops')
    
    delivery_location = models.CharField(max_length=255)
    delivery_address_line_2 = models.CharField(max_length=255, blank=True, null=True)
    delivery_name = models.CharField(max_length=100)
    delivery_phone_number = models.CharField(max_length=20)
    delivery_description = models.TextField(help_text="What do you need to deliver at this location?")

    stop_order = models.PositiveIntegerField(default=1)

    def __str__(self):
        return f"Delivery Stop #{self.stop_order} for Service ID {self.service.id}"


--------------------------------------------------
from django.contrib import admin
from .models import PickupDeliveryService, DeliveryStop

# Inline for DeliveryStop
class DeliveryStopInline(admin.TabularInline):
    model = DeliveryStop
    extra = 1  # Number of extra blank forms

# Admin for PickupDeliveryService
@admin.register(PickupDeliveryService)
class PickupDeliveryServiceAdmin(admin.ModelAdmin):
    list_display = ('id', 'user', 'vehicle_type', 'payment_method', 'created_at')
    list_filter = ('vehicle_type', 'payment_method', 'created_at')
    search_fields = ('user__username', 'pickup_location', 'pickup_phone_number')
    inlines = [DeliveryStopInline]

# Optional: Register DeliveryStop separately (if needed)
@admin.register(DeliveryStop)
class DeliveryStopAdmin(admin.ModelAdmin):
    list_display = ('id', 'service', 'delivery_location', 'delivery_name', 'delivery_phone_number')
    search_fields = ('delivery_location', 'delivery_name', 'delivery_phone_number')

